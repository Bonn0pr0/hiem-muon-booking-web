
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Badge } from "@/components/ui/badge";
import { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from "@/components/ui/table";

const SystemReports = () => {
  const systemStats = [
    { label: "T·ªïng s·ªë b·ªánh nh√¢n", value: "1,234", change: "+5.2%", color: "text-blue-600" },
    { label: "T·ªïng s·ªë b√°c sƒ©", value: "45", change: "+2.1%", color: "text-green-600" },
    { label: "T·ªïng s·ªë manager", value: "8", change: "0%", color: "text-purple-600" },
    { label: "T·ªïng s·ªë staff", value: "23", change: "+8.7%", color: "text-orange-600" },
    { label: "L·ªãch h·∫πn th√°ng n√†y", value: "567", change: "+12.3%", color: "text-pink-600" },
    { label: "Doanh thu th√°ng n√†y", value: "2.4B VNƒê", change: "+15.8%", color: "text-indigo-600" }
  ];

  const recentActivities = [
    { id: 1, action: "T·∫°o t√†i kho·∫£n m·ªõi", user: "Admin", target: "doctor@newdoc.com", time: "2 ph√∫t tr∆∞·ªõc", type: "create" },
    { id: 2, action: "C·∫≠p nh·∫≠t th√¥ng tin", user: "Manager", target: "Nguy·ªÖn VƒÉn A", time: "15 ph√∫t tr∆∞·ªõc", type: "update" },
    { id: 3, action: "X√≥a l·ªãch h·∫πn", user: "Staff", target: "Booking #1234", time: "1 gi·ªù tr∆∞·ªõc", type: "delete" },
    { id: 4, action: "Ph√¢n quy·ªÅn", user: "Admin", target: "staff@new.com", time: "2 gi·ªù tr∆∞·ªõc", type: "permission" }
  ];

  const getActivityColor = (type: string) => {
    switch (type) {
      case 'create': return 'bg-green-100 text-green-800';
      case 'update': return 'bg-blue-100 text-blue-800';
      case 'delete': return 'bg-red-100 text-red-800';
      case 'permission': return 'bg-purple-100 text-purple-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  const bookingData = [
    { id: 1, date: "2024-06-15", time: "09:00", doctor: "BS. Tr·∫ßn VƒÉn Nam", service: "IUI", status: "completed" },
    { id: 2, date: "2024-06-15", time: "10:30", doctor: "BS. Nguy·ªÖn Th·ªã Mai", service: "IVF", status: "confirmed" },
    { id: 3, date: "2024-06-16", time: "14:00", doctor: "BS. L√™ Minh Ho√†ng", service: "ICSI", status: "cancelled" }
  ];

  const getStatusColor = (status: string) => {
    switch (status) {
      case 'completed': return 'bg-green-100 text-green-800';
      case 'confirmed': return 'bg-blue-100 text-blue-800';
      case 'cancelled': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="space-y-6">
      {/* Th·ªëng k√™ t·ªïng quan */}
      <div className="grid md:grid-cols-2 lg:grid-cols-3 gap-6">
        {systemStats.map((stat, index) => (
          <Card key={index}>
            <CardContent className="p-6">
              <div className="flex items-center justify-between">
                <div>
                  <p className="text-sm text-muted-foreground">{stat.label}</p>
                  <p className="text-2xl font-bold">{stat.value}</p>
                  <p className={`text-sm ${stat.color}`}>{stat.change} so v·ªõi th√°ng tr∆∞·ªõc</p>
                </div>
              </div>
            </CardContent>
          </Card>
        ))}
      </div>

      {/* Ho·∫°t ƒë·ªông g·∫ßn ƒë√¢y */}
      <Card>
        <CardHeader>
          <CardTitle>Ho·∫°t ƒë·ªông h·ªá th·ªëng g·∫ßn ƒë√¢y</CardTitle>
          <CardDescription>
            Theo d√µi c√°c ho·∫°t ƒë·ªông quan tr·ªçng trong h·ªá th·ªëng
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>H√†nh ƒë·ªông</TableHead>
                <TableHead>Ng∆∞·ªùi th·ª±c hi·ªán</TableHead>
                <TableHead>ƒê·ªëi t∆∞·ª£ng</TableHead>
                <TableHead>Th·ªùi gian</TableHead>
                <TableHead>Lo·∫°i</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {recentActivities.map((activity) => (
                <TableRow key={activity.id}>
                  <TableCell className="font-medium">{activity.action}</TableCell>
                  <TableCell>{activity.user}</TableCell>
                  <TableCell>{activity.target}</TableCell>
                  <TableCell>{activity.time}</TableCell>
                  <TableCell>
                    <Badge className={getActivityColor(activity.type)}>
                      {activity.type}
                    </Badge>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>

      {/* Qu·∫£n l√Ω l·ªãch h·∫πn (ch·ªâ hi·ªÉn th·ªã th√¥ng tin l·ªãch h·∫πn, kh√¥ng c√≥ th√¥ng tin c√° nh√¢n) */}
      <Card>
        <CardHeader>
          <CardTitle>Qu·∫£n l√Ω l·ªãch h·∫πn h·ªá th·ªëng</CardTitle>
          <CardDescription>
            Th√¥ng tin l·ªãch h·∫πn (ƒë√£ ·∫©n th√¥ng tin c√° nh√¢n kh√°ch h√†ng)
          </CardDescription>
        </CardHeader>
        <CardContent>
          <Table>
            <TableHeader>
              <TableRow>
                <TableHead>Ng√†y</TableHead>
                <TableHead>Gi·ªù</TableHead>
                <TableHead>B√°c sƒ©</TableHead>
                <TableHead>D·ªãch v·ª•</TableHead>
                <TableHead>Tr·∫°ng th√°i</TableHead>
                <TableHead>Thao t√°c</TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {bookingData.map((booking) => (
                <TableRow key={booking.id}>
                  <TableCell>{booking.date}</TableCell>
                  <TableCell>{booking.time}</TableCell>
                  <TableCell>{booking.doctor}</TableCell>
                  <TableCell>{booking.service}</TableCell>
                  <TableCell>
                    <Badge className={getStatusColor(booking.status)}>
                      {booking.status === 'completed' ? 'Ho√†n th√†nh' : 
                       booking.status === 'confirmed' ? 'ƒê√£ x√°c nh·∫≠n' : 'ƒê√£ h·ªßy'}
                    </Badge>
                  </TableCell>
                  <TableCell>
                    <Button size="sm" variant="outline">
                      Chi ti·∫øt
                    </Button>
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </CardContent>
      </Card>

      {/* B√°o c√°o v√† xu·∫•t d·ªØ li·ªáu */}
      <Card>
        <CardHeader>
          <CardTitle>B√°o c√°o v√† xu·∫•t d·ªØ li·ªáu</CardTitle>
          <CardDescription>
            T·∫°o c√°c b√°o c√°o v√† xu·∫•t d·ªØ li·ªáu h·ªá th·ªëng
          </CardDescription>
        </CardHeader>
        <CardContent className="grid md:grid-cols-2 lg:grid-cols-4 gap-4">
          <Button variant="outline">üìä B√°o c√°o doanh thu</Button>
          <Button variant="outline">üë• B√°o c√°o ng∆∞·ªùi d√πng</Button>
          <Button variant="outline">üìÖ B√°o c√°o l·ªãch h·∫πn</Button>
          <Button variant="outline">üíæ Xu·∫•t d·ªØ li·ªáu</Button>
          <Button variant="outline">üìà Th·ªëng k√™ truy c·∫≠p</Button>
          <Button variant="outline">üîí B√°o c√°o b·∫£o m·∫≠t</Button>
          <Button variant="outline">‚öôÔ∏è Log h·ªá th·ªëng</Button>
          <Button variant="outline">üîÑ Sao l∆∞u d·ªØ li·ªáu</Button>
        </CardContent>
      </Card>
    </div>
  );
};

export default SystemReports;
